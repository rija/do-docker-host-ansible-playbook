# Ensure a droplet is present
# If droplet id already exist, will return the droplet details and changed = False
# If no droplet matches the id, a new droplet will be created and the droplet details (including the new id) are returned, changed = True.

- digital_ocean:
    command: ssh
    state: present
    name: "{{key_name}}"
    ssh_pub_key: "{{ lookup('file', pub_key_for_new_droplet) }}"
    api_token: "{{api_token}}"
  register: do_key

- digital_ocean:
    command: droplet
    state: present
    name: "{{ansible_host}}"
    unique_name: yes
    size_id: 512mb
    region_id: sgp1
    image_id: docker-16-04
    wait_timeout: 500
    ssh_key_ids: "{{ do_key.ssh_key.id }}"
    api_token: "{{api_token}}"
  register: droplet_details

- debug: msg="IP is {{ droplet_details.droplet.ip_address }}"

- name: set do_host_ip
  set_fact: do_host_ip={{droplet_details.droplet.ip_address}}

- name: remove domain
  digital_ocean_domain:
    api_token: "{{lookup('env', 'DO_API_TOKEN')}}"
    state: absent
    name: "{{ droplet_details.droplet.name }}"
    ip: "{{ droplet_details.droplet.ip_address }}"

- name: add canonical domain
  digital_ocean_domain:
    api_token: "{{lookup('env', 'DO_API_TOKEN')}}"
    state: present
    name: "{{ droplet_details.droplet.name }}"
    ip: "{{ droplet_details.droplet.ip_address }}"

- name: add www
  digital_ocean_domain:
    api_token: "{{lookup('env', 'DO_API_TOKEN')}}"
    state: present
    name: "www.{{ droplet_details.droplet.name }}"
    ip: "{{ droplet_details.droplet.ip_address }}"
