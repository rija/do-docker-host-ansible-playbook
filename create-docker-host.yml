---
# This playbook configure hosts: initial configuration, installing docker on DO hosts

- hosts: dockerhosts
  name: create a droplet


  roles:
    - {role: droplet, tags: ["create_droplet"]}

- name: enabling ssh and check the server configuration
  hosts: dockerhosts
  vars:
      local_known_hosts_file: "~/.ssh/known_hosts"


  roles:
    - { role: ssh_port_detect, tags: ["hostcheck", "ssh_port_detect"] }
    - { role: known_hosts, tags: ["hostcheck", "known_hosts"] }
    - { role: ssh_user_detect, tags: ["hostcheck", "ssh_user_detect"] }

- name : configure the server
  hosts: new_droplet
  vars:
      ansible_user: "{{do_host_user}}"

  roles:
    - { role: ufw, tags: ["hostconfig", "ufw"] }


#     - { role: python, tags: ["hostconfig","python"] }
#     - { role: sshd, tags: ["hostconfig", "sshd"] }
#     - { role: swap, tags: ["hostconfig", "swap"] }
#     - { role: ufw,  tags: ["hostconfig", "ufw"] }
#
#
# - name: set up docker daemon
#   hosts: all
#   gather_facts: false
#   vars_files:
#   - ../private_vars/ssh_connect.yml
#   vars:
#     - ansible_port: "{{custom_port}}"
#
#   roles:
#     - { role: ssh_user_detect, tags: ["docker", "ssh_user_detect"] }
#     - { role: dockerd, tags: ["docker"] }
#
# - name: remove root access
#   hosts: all
#   gather_facts: false
#   vars_files:
#   - ../private_vars/ssh_connect.yml
#   vars:
#     - ansible_port: "{{custom_port}}"
#
#   roles:
#     - { role: ssh_user_detect, tags: ["deroot", "ssh_user_detect"] }
#     - { role: deroot, tags: ["deroot"] }
